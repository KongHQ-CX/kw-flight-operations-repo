name: Deploy data-plane

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to provision'
        type: string
        default: 'dev'

jobs:
  deploy-dataplane:
    runs-on: ubuntu-latest

    permissions:
      id-token: write   # Required for OIDC token generation
      contents: read    # Required to checkout code

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get secrets from Vault
        uses: hashicorp/vault-action@v3
        id: import-secrets
        with:
          url: ${{ vars.VAULT_ADDR }}
          method: jwt
          path: github-actions           
          role: ${{ vars.KONNECT_TEAM_NAME }}-gh-repo-role
          exportToken: true  # exports the env.VAULT_TOKEN
          secrets: |
            ${{ vars.KONNECT_TEAM_NAME }}-kv/data/control-planes/${{ vars.KONNECT_TEAM_NAME }}-${{ inputs.environment }} clustering_cert | CP_CLUSTERING_CERT ;
            ${{ vars.KONNECT_TEAM_NAME }}-kv/data/control-planes/${{ vars.KONNECT_TEAM_NAME }}-${{ inputs.environment }} clustering_cert_key | CP_CLUSTERING_CERT_KEY ;
            ${{ vars.KONNECT_TEAM_NAME }}-kv/data/control-planes/${{ vars.KONNECT_TEAM_NAME }}-${{ inputs.environment }} control_plane_endpoint | CP_ENDPOINT ;
            ${{ vars.KONNECT_TEAM_NAME }}-kv/data/control-planes/${{ vars.KONNECT_TEAM_NAME }}-${{ inputs.environment }} telemetry_endpoint | CP_TELEMETRY_ENDPOINT ;
            ${{ vars.KONNECT_TEAM_NAME }}-kv/data/control-planes/${{ vars.KONNECT_TEAM_NAME }}-${{ inputs.environment }} name | CP_NAME ;

      - name: Provision Konnect Resources
        uses: KongHQ-CX/kw-platform-ops/.github/actions/deploy-dp@main
        with:
          kong-image-repo: ${{ inputs.kong-image-repo || 'kong/kong-gateway' }}
          kong-image-tag: ${{ inputs.kong-image-tag || '3.11' }}
          team-name: ${{ vars.KONNECT_TEAM_NAME }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          environment: ${{ inputs.environment  }}
          control-plane-clustering-cert: $CP_CLUSTERING_CERT
          control-plane-clustering-cert-key: $CP_CLUSTERING_CERT_KEY
          control-plane-endpoint: $CP_ENDPOINT
          telemetry-endpoint: $CP_TELEMETRY_ENDPOINT
          control-plane-name: $CP_NAME
          
